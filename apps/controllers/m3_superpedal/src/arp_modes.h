/*
 * Mode representation
 */

#ifndef _ARP_MODES_H
#define _ARP_MODES_H

#include "seq_chord.h"

/////////////////////////////////////////////////////////////////////////////
// Global definitions
/////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
// Global Types
/////////////////////////////////////////////////////////////////////////////
typedef enum modes_e {
   MODES_IONIAN = 0,
   MODES_DORIAN = 1,
   MODES_PHYRIGIAN = 2,
   MODES_LYDIAN= 3,
   MODES_MIXOLYDIAN = 4,
   MODES_AEOLIAN = 5,
   MODES_LOCRIAN = 6
} modes_t;
#define MAX_MODE_TYPE 6

typedef enum key_e {
   KEY_C = 0,
   KEY_CSHARP = 1,
   KEY_D = 2,
   KEY_EFLAT = 3,
   KEY_E = 4,
   KEY_F = 5,
   KEY_FSHARP = 6,
   KEY_G = 7,
   KEY_AFLAT = 8,
   KEY_A = 9,
   KEY_BFLAG = 10,
   KEY_B = 11
} key_t;

/////////////////////////////////////////////////////////////////////////////
// Prototypes
/////////////////////////////////////////////////////////////////////////////

extern const chord_type_t ARP_MODES_GetChordType(modes_t mode,key_t key);

/////////////////////////////////////////////////////////////////////////////
// Export global variables
/////////////////////////////////////////////////////////////////////////////

#endif /* _ARP_H */
