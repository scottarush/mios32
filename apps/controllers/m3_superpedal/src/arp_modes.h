/*
 * Mode representation
 */

#ifndef _ARP_MODES_H
#define _ARP_MODES_H

#include "seq_chord.h"
#include "seq_scale.h"
/////////////////////////////////////////////////////////////////////////////
// Global definitions
/////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
// Global Types
/////////////////////////////////////////////////////////////////////////////

typedef enum key_e {
   KEY_C = 0,
   KEY_CSHARP = 1,
   KEY_D = 2,
   KEY_EFLAT = 3,
   KEY_E = 4,
   KEY_F = 5,
   KEY_FSHARP = 6,
   KEY_G = 7,
   KEY_AFLAT = 8,
   KEY_A = 9,
   KEY_BFLAG = 10,
   KEY_B = 11
} key_t;

typedef enum chord_extension_e {
   CHORD_EXT_NONE = 0,
   CHORD_EXT_SEVENTH = 1,
   CHORD_EXT_NINTH = 2
}  chord_extension_t;

/////////////////////////////////////////////////////////////////////////////
// Prototypes
/////////////////////////////////////////////////////////////////////////////

extern const char * ARP_MODES_GetNoteName(u8 note);
extern const chord_type_t ARP_MODES_GetModeChord(scale_t scale,chord_extension_t extension,u8 keySig,u8 note);

/////////////////////////////////////////////////////////////////////////////
// Export global variables
/////////////////////////////////////////////////////////////////////////////

#endif /* _ARP_H */
